##普通的字典下拉框
#macro (simpleCombobox $id $entryName $methodName $defaultValue $limitText $limitValue $dataOptions)
##根据类名获取字典里的枚举集合
    #set($dicts = "")
    #if($entryName.indexOf(".") != -1)
        #set($dicts = $dictUtils.getDataByCompleteClassName($entryName, $methodName))
    #else
        #if($methodName == "")
            #set($dicts = $dictUtils.getData($entryName))
        #else
            #set($dicts = $dictUtils.getDataByMethod($entryName, $methodName))
        #end
    #end
    ##判断列表长度
    #if($dicts && $dicts.size() > 0)
    <select class="easyui-combobox" data-options="$!dataOptions" id="$!{id}" name="$!{id}">
        ##初始化第一个下拉框
        #if($limitText && $limitText != "")
            <option title="$!limitText" value="$!limitValue">$!limitText</option>
        #end
        ##初始化其它下拉框
        #foreach($dict in $dicts)
            #set($dict_id = $dict.intValue())
            <option title="$!{dict.name}" value="$!{dict_id}"
                    #if($defaultValue == $dict_id)
                        selected="selected"
                    #end
                    >$!{dict.name}</option>
        #end
    </select>
    #end
#end

##基于字典的多选框
#macro(multiComboboxBase $id $entryName $methodName $defaultValue $limitText $limitValue $dataOptions $loadSuccessCallBack $lazy)
<input id="$!id" name="$!id" />
##根据类名获取字典里的枚举集合
    #set($dicts = "")
    #if($entryName.indexOf(".") != -1)
        #set($dicts = $dictUtils.getDataByCompleteClassName($entryName, $methodName))
    #else
        #if($methodName == "")
            #set($dicts = $dictUtils.getData($entryName))
        #else
            #set($dicts = $dictUtils.getDataByMethod($entryName, $methodName))
        #end
    #end
<script type="text/javascript">
    var $!{id}MultiComboboxLoad;
    (function($){
        $(function () {
            $!{id}MultiComboboxLoad = load;
            #if($lazy == false)
                load();
            #end
        });
        function load(){
            var m_m_id = "$!id";
            var m_m_default_value = "$!defaultValue";
            var m_m_limit_value = "$!limitValue";
            var m_m_limit_text = "$!limitText";
            var m_m_array = new Array();
            #if($dicts && $dicts.size() > 0)
                #if($!limitText != "")
                    m_m_array.push({id : "$!limitValue", "text" : "$!limitText"});
                #end
                #foreach($dict in $dicts)
                    m_m_array.push({id : "$!dict.intValue()", "text" : "$!dict.name"});
                #end
            #end
            jQuery("#" + m_m_id).combobox({
                multiple:true,
                editable:false,
                valueField:'id',
                textField:'text',
                data : m_m_array,
                $!dataOptions
                formatter: function (row) {
                    var opts = $(this).combobox('options');
                    if (m_m_limit_value == row[opts.valueField])
                        return row[opts.textField];
                    return '<input type="checkbox" class="combobox-checkbox">&nbsp;' + row[opts.textField];
                },
                onLoadSuccess: function () {
                    var items = $(this).combobox("getData");
                    var id = m_m_default_value;
                    if (items.length > 0) {
                        var flag = false;
                        for (var i = 0; i < items.length; i++) {
                            if (id == items[i].id) {
                                flag = true;
                            }
                        }
                        if (!flag)
                            id = items[0].id;
                        $(this).combobox("select", id);
                    }
                    $!loadSuccessCallBack
                },
                onSelect: function (row) {
                    var opts = $(this).combobox('options');
                    var vals = $(this).combobox('getValues');

                    if (m_m_limit_value != row[opts.valueField]) {
                        //选中checkbox
                        var el = opts.finder.getEl(this, row[opts.valueField]);
                        el.find('input.combobox-checkbox')._propAttr('checked', true);
                    } else {
                        //如选中不限, 则取消所有checkbox选中, 并选中不限
                        for (var i = 0; i < vals.length; i++) {
                            var el = opts.finder.getEl(this, vals[i]);
                            el.find('input.combobox-checkbox')._propAttr('checked', false);
                        }
                        $(this).combobox('setValue', m_m_limit_value);
                    }
                    //重新获取下拉框的值
                    vals = $(this).combobox('getValues');
                    //如点击不限之外的其它选项, 则取消不限的选中, 选中其余的
                    if (vals.length > 0) {
                        var newvals = new Array();
                        for (var i = 0; i < vals.length; i++) {
                            var item = vals[i];
                            if (item != m_m_limit_value)
                                newvals.push(item);
                        }
                        if (newvals.length > 0)
                            $(this).combobox('setValues', newvals);
                    }
                },
                onUnselect: function (row) {
                    var opts = $(this).combobox('options');
                    if (m_m_limit_value != row[opts.valueField]) {
                        var el = opts.finder.getEl(this, row[opts.valueField]);
                        el.find('input.combobox-checkbox')._propAttr('checked', false);
                    }
                    //如果所有框都没有选中, 默认选中不限
                    var selOpts = $(this).combobox("getValue");
                    if (selOpts == undefined) {
                        $(this).combobox("select", m_m_limit_value);
                    }
                }
            });
        }
    })(jQuery)
</script>
#end

##基于字典的多选框
#macro(multiCombobox $id $entryName $methodName $defaultValue $limitText $limitValue $dataOptions $loadSuccessCallBack)
    #multiComboboxBase($id $entryName $methodName $defaultValue $limitText $limitValue $dataOptions $loadSuccessCallBack false)
#end


##基于URL的多选框
#macro(multiComboboxByURLBase $id $url $limitValue $defaultValue $dataOptions $loadSuccessCallBack $lazy)
<input id="$!id" name="$!id" />
<script type="text/javascript">
    var $!{id}MultiComboboxByURLLoad;
    (function($){
        $(function () {
            $!{id}MultiComboboxByURLLoad = load;
            #if($lazy == false)
                load();
            #end
        });
        function load() {
            var m_m_id = "$!id";
            var m_m_default_value = "$!defaultValue";
            var m_m_limit_value = "$!limitValue";
            jQuery("#" + m_m_id).combobox({
                multiple: true,
                editable: false,
                valueField: 'id',
                textField: 'text',
                url: "$!url",
                $!dataOptions
                formatter: function (row) {
                    var opts = $(this).combobox('options');
                    if (m_m_limit_value == row[opts.valueField])
                        return row[opts.textField];
                    return '<input type="checkbox" class="combobox-checkbox">&nbsp;' + row[opts.textField];
                },
                onLoadSuccess: function () {
                    var items = $(this).combobox("getData");
                    var id = m_m_default_value;
                    if (items.length > 0) {
                        var flag = false;
                        for (var i = 0; i < items.length; i++) {
                            if (id == items[i].id) {
                                flag = true;
                            }
                        }
                        if (!flag)
                            id = items[0].id;
                        $(this).combobox("select", id);
                    }
                    $!loadSuccessCallBack
                },
                onSelect: function (row) {
                    var opts = $(this).combobox('options');
                    var vals = $(this).combobox('getValues');
                    if (m_m_limit_value != row[opts.valueField]) {
                        //选中checkbox
                        var el = opts.finder.getEl(this, row[opts.valueField]);
                        el.find('input.combobox-checkbox')._propAttr('checked', true);
                    } else {
                        //如选中不限, 则取消所有checkbox选中, 并选中不限
                        for (var i = 0; i < vals.length; i++) {
                            var el = opts.finder.getEl(this, vals[i]);
                            el.find('input.combobox-checkbox')._propAttr('checked', false);
                        }
                        $(this).combobox('setValue', m_m_limit_value);
                    }
                    //重新获取下拉框的值
                    vals = $(this).combobox('getValues');
                    //如点击不限之外的其它选项, 则取消不限的选中, 选中其余的
                    if (vals.length > 0) {
                        var newvals = new Array();
                        for (var i = 0; i < vals.length; i++) {
                            var item = vals[i];
                            if (item != m_m_limit_value)
                                newvals.push(item);
                        }
                        if (newvals.length > 0)
                            $(this).combobox('setValues', newvals);
                    }
                },
                onUnselect: function (row) {
                    var opts = $(this).combobox('options');
                    if (m_m_limit_value != row[opts.valueField]) {
                        var el = opts.finder.getEl(this, row[opts.valueField]);
                        el.find('input.combobox-checkbox')._propAttr('checked', false);
                    }
                    //如果所有框都没有选中, 默认选中不限
                    var selOpts = $(this).combobox("getValue");
                    if (selOpts == undefined) {
                        $(this).combobox("select", m_m_limit_value);
                    }
                }
            });
        }
    })(jQuery)
</script>
#end

##基于URL的多选框
#macro(multiComboboxByURL $id $url $limitValue $defaultValue $dataOptions $loadSuccessCallBack)
    #multiComboboxByURLBase($id $url $limitValue $defaultValue $dataOptions $loadSuccessCallBack false)
#end

##基于URL的单选框
#macro(simpleComboboxByURLBase $id $url $limitValue $defaultValue $dataOptions $loadSuccessCallBack $lazy)
<input id="$!id" name="$!id" />
<script type="text/javascript">
    var $!{id}SimpleComboboxByURLLoad;
    (function($){
        $(function () {
            $!{id}SimpleComboboxByURLLoad = load;
            #if($lazy == false)
                load();
            #end
        });
        function load() {
            var m_m_id = "$!id";
            var m_m_default_value = "$!defaultValue";
            var m_m_limit_value = "$!limitValue";
            jQuery("#" + m_m_id).combobox({
                editable:false,
                valueField:'id',
                textField:'text',
                url : "$!url",
                $!dataOptions
                onLoadSuccess: function () {
                    var items = $(this).combobox("getData");
                    var id = m_m_default_value;
                    if (items.length > 0) {
                        var flag = false;
                        for (var i = 0; i < items.length; i++) {
                            if (id == items[i].id) {
                                flag = true;
                            }
                        }
                        if (!flag)
                            id = items[0].id;
                        $(this).combobox("select", id);
                    }
                    $!loadSuccessCallBack
                },
            });
        }
    })(jQuery)
</script>
#end

##基于URL的单选框
#macro(simpleComboboxByURL $id $url $limitValue $defaultValue $dataOptions $loadSuccessCallBack)
    #simpleComboboxByURLBase($id $url $limitValue $defaultValue $dataOptions $loadSuccessCallBack false)
#end


##基于URL的联动(主)
#macro(simpleComboboxLinkageByURL $id $url $defaultValue $dataOptions $callBack $loanSuccessCallBack $lazy)
<input id="$!id" name="$!id" />
<script type="text/javascript">
    var $!{id}SimpleComboboxLinkageByURLLoad;
    (function($){
        $(function () {
            $!{id}SimpleComboboxLinkageByURLLoad = load;
            #if($lazy == false)
                load();
            #end
        });
        function load() {
            var m_m_id = "$!id";
            var m_m_default_value = "$!defaultValue";
            jQuery("#" + m_m_id).combobox({
                editable:false,
                valueField:'id',
                textField:'text',
                url : "$!url",
                $!dataOptions
                onLoadSuccess: function () {
                    var items = $(this).combobox("getData");
                    var id = m_m_default_value;
                    if (items.length > 0) {
                        var flag = false;
                        for (var i = 0; i < items.length; i++) {
                            if (id == items[i].id) {
                                flag = true;
                            }
                        }
                        if (!flag)
                            id = items[0].id;
                        $(this).combobox("select", id);
                    }
                    #if($callBack && $callBack != "")
                        $!{callBack}(m_m_default_value);
                    #else
                        $!loanSuccessCallBack
                    #end
                },
                onSelect: function (row) {
                    #if($callBack && $callBack != "")
                        $!{callBack}(row.id);
                    #end
                }
            });
        }
    })(jQuery)
</script>
#end


##基于URL的联动(副)
#macro(lessSimpleComboboxLinkageByURL $id $url $appendFieldName $appendFieldJsValue $defaultValue $dataOptions $callBack $loanSuccessCallBack)
<input id="$!id" name="$!id" />
<script type="text/javascript">
    var $!{id}LessSimpleComboboxLinkageByURLLoad;
    (function($){
        var url = "";
        #set($tmp_url = "")
        #if ($url.indexOf("?") != -1)
            #set($tmp_url = $url + $appendFieldName + "=")
        #else
            #set($tmp_url = $url + "?" + $appendFieldName + "=")
        #end
        $(function () {
            $!{id}LessSimpleComboboxLinkageByURLLoad = load;
        });
        function load(sth) {
            var m_m_id = "$!id";
            var m_m_default_value = "$!defaultValue";
            jQuery("#" + m_m_id).combobox({
                editable:false,
                valueField:'id',
                textField:'text',
                url : "$!{tmp_url}" + sth,
                $!dataOptions
                onLoadSuccess: function () {
                    var items = $(this).combobox("getData");
                    var id = m_m_default_value;
                    if (items.length > 0) {
                        var flag = false;
                        for (var i = 0; i < items.length; i++) {
                            if (id == items[i].id) {
                                flag = true;
                            }
                        }
                        if (!flag)
                            id = items[0].id;
                        $(this).combobox("select", id);
                    }
                    #if($callBack && $callBack != "")
                        #if($appendFieldJsValue == "")
                            $!{callBack}(m_m_default_value);
                        #else
                            $!{callBack}($!{appendFieldJsValue});
                        #end
                    #else
                        $!loanSuccessCallBack
                    #end
                },
                onSelect: function (row) {
                    #if($callBack && $callBack != "")
                        #if($appendFieldJsValue == "")
                            $!{callBack}(row.id);
                        #else
                            $!{callBack}($!{appendFieldJsValue});
                        #end

                    #end
                }
            });
        }
    })(jQuery)
</script>
#end